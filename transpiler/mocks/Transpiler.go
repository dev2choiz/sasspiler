// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	afero "github.com/spf13/afero"
	mock "github.com/stretchr/testify/mock"
)

// Transpiler is an autogenerated mock type for the Transpiler type
type Transpiler struct {
	mock.Mock
}

// FileSystem provides a mock function with given fields:
func (_m *Transpiler) FileSystem() afero.Fs {
	ret := _m.Called()

	var r0 afero.Fs
	if rf, ok := ret.Get(0).(func() afero.Fs); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(afero.Fs)
		}
	}

	return r0
}

// GetFiles provides a mock function with given fields: dir
func (_m *Transpiler) GetFiles(dir string) []afero.File {
	ret := _m.Called(dir)

	var r0 []afero.File
	if rf, ok := ret.Get(0).(func(string) []afero.File); ok {
		r0 = rf(dir)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]afero.File)
		}
	}

	return r0
}

// Run provides a mock function with given fields: source, dest, files, imports
func (_m *Transpiler) Run(source string, dest string, files []afero.File, imports []string) error {
	ret := _m.Called(source, dest, files, imports)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, []afero.File, []string) error); ok {
		r0 = rf(source, dest, files, imports)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetFileSystem provides a mock function with given fields: _a0
func (_m *Transpiler) SetFileSystem(_a0 afero.Fs) {
	_m.Called(_a0)
}

// SetVerbose provides a mock function with given fields: _a0
func (_m *Transpiler) SetVerbose(_a0 bool) {
	_m.Called(_a0)
}

// Verbose provides a mock function with given fields:
func (_m *Transpiler) Verbose() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
